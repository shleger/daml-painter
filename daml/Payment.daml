module Payment where

import  Daml.Script


data PayResult = PayResult with
  debit : ContractId IouBank  --debit entry always adds a positive number or receive money
  credit : ContractId IouBank --credit entry always adds a negative number or send money
    deriving (Eq, Show)

template IouBank 
    with
        issuer: Party
        owner: Party
        balance: Decimal
        
    where
        signatory issuer, owner
        

        choice IouBank_Transfer : PayResult
            with
                payAmount: Decimal
                newOwner : Party
            controller owner, newOwner
            do
              credit <- create this with balance = balance - payAmount
              debit  <- create this with balance = payAmount; owner = newOwner
              return PayResult with credit; debit


iouPay = script do
    myRoles@(alice,den,banker) <- roles

    iouId <- submitMulti [banker,alice] [] do
        createCmd IouBank with
            issuer = banker
            owner = alice
            balance = 500.00

    pr <- submit alice do 
        exerciseCmd iouId IouBank_Transfer 
            with 
                payAmount = 200.00
                newOwner = banker --TODO must be den !!
            


    return (myRoles, iouId)





template BankTransaction
  with
    sender : Party
    receiver: Party
    receiverAcc:ContractId BankAccount 
    amount: Decimal
  where
    signatory sender
    observer  receiver
    

template BankAccount 
    with
        owner: Party
        ownerName: Text
        accIssuer: Party
        accNumber: Int
        accName: Text
        accBalance: Decimal
    where
        signatory accIssuer
        observer owner    

        choice Transfer : ContractId BankTransaction
            with
                cost: Decimal
                to: Party  
                from: Party 
                receiverAcc: ContractId BankAccount
            controller owner    
            do 
                create BankTransaction with
                    sender = to
                    receiver=from
                    amount = accBalance - cost
                    receiverAcc
                    

                

sending = script do

    rolesTup@(alice,den,banker) <- roles

    

    cidAlice <- submit banker do
            createCmd BankAccount with
                accBalance = 1000.00
                accIssuer = banker
                accNumber = 12345
                accName = "Alice's account"
                owner = alice
                ownerName = "Alice Wander"


    cidDen <- submit banker do
            createCmd BankAccount with
                accBalance = 0.00
                accIssuer = banker
                accNumber = 67890
                accName = "Den's account"
                owner = alice
                ownerName = "Den Draw"

    -- submit banker do
    --     exerciseCmd cidAlice Transfer with
    --         cost = 100.00
    --         to = den
    --         from = alice
    --         receiverAcc = cidDen

    pure rolesTup

roles = script do
    alice   <- allocatePartyWithHint "Alice" (PartyIdHint "Alice")
    den     <- allocatePartyWithHint "Den" (PartyIdHint "Den")
    banker  <- allocatePartyWithHint "Bank" (PartyIdHint "Bank")

    pure (alice,den,banker)
      
      




